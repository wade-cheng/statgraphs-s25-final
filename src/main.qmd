---
title: "Baseball Analysis"
format: html
output-file: "index.html"
bibliography: sources.bib
authors:
# https://quarto.org/docs/journals/authors.html#author-schema
# if you want to be fancy with it
  - name: Elina Lee
  - name: Wade Cheng 
  - name: Jaihao Wu
  - name: Leo Yao
# these can be enabled to stop running code chunks, which is helpful if you just
# want to test out content without needing to compile everything every re-render
# execute:
#   eval: false
---

```{r, include=FALSE}
library(tidyverse)
library(viridis)
library(BSDA)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```


```{r, include=FALSE}
baseball <- read_csv("train.csv", col_types="iDfffcciiffffffiiiidddddf")
park_dim <- read_csv("park_dimensions.csv")
lockBinding("baseball", globalenv()) # make baseball immutable
#unlockBinding("baseball", globalenv())
```

## Introduction

Baseball, the great American pastime, makes over ten billion dollars annually
[@cohen_2024_mlb], draws millions to stadiums across the nation [@attendence_2023],
and is played recreationally at parks and schools every day. After malding at
the TV over terrible plays or inscrutable ball trajectories too many times, we
decided it would be interesting to pick apart real professional league data to
reveal more objective insights into this popular game.

Our dataset [@jcraggy_2020_baseball] comes from a Kaggle model-creating 
competition to predict home runs. It has 46,244 observations that represent each
batted ball from the 2020 MLB season (which was abbreviated due to COVID---the
regular season included 60 games against 9 opponents instead of the typical 162
games against 19 or 20 opponents). The dataset also includes post-season games. 

Each observation has twenty-five variables. We analyzed the subset below:

**TODO: bold variables you use!**
**This will help us remove items we didn't use, later**

- bip_id: unique identifier of ball in play
- game_date: date of game (YYYY-MM-DD)
- home_team: home team abbreviation
- away_team: away team abbreviation
- batter_team: batter's team abbreviation
- batter_name: batter's name
- pitcher_name: pitcher's name
- batter_id: batter's unique identifier
- pitcher_id: pitcher's unique identifier
- park: unique identifier of park venue
- balls: current number of balls
- strikes: current number of strikes
- **inning: inning number within game**
- **outs_when_up: current number of outs**
- **is_pitcher_lefty: binary encoding of left-handed pitchers**
- **is_batter_lefty: binary encoding of left-handed batters**
- **pitch_name: name of pitch type thrown**
- **pitch_mph: speed of pitched ball (miles per hour)**
- **plate_x: ball position left (-) or right (+) of center plate (feet)**
- **plate_z: ball position above home plate (feet)**
- **launch_speed: speed of ball leaving the bat (miles per hour)**
- **launch_angle: vertical angle of ball leaving the bat (degrees relative to horizontal)**
- **bb_type: batted ball type classification**
- **bearing: horizontal direction classification of ball leaving the bat (i.e. 'left' ball is traveling to the left side of the field)**
- **is_home_run: binary encoding of home runs**

With these variables, we aimed to investigate anything that might help a team
win a game of baseball, with special focus on inning number, hit location,
launch angle, and ball bearing. In particular, we studied the relationship
between each of these factors and player performance.

## Results

### Bearing

Ball bearing is correlated with player handedness.

```{r, echo=FALSE}
# mar
# A numerical vector of the form c(bottom, left, top, right) which gives the number of lines of margin to be specified on the four sides of the plot. The default is c(5, 4, 4, 2) + 0.1.
par(mfrow = c(1, 2), mar=c(6,1,4,1))
batter = table(baseball$bearing, baseball$is_batter_lefty)
dimnames(batter) <- list(
  c("left", "center", "right"),
  c("right \nhanded","left \nhanded")
) 

mosaicplot(
  batter, 
  shade=TRUE, 
  las=1,
  main="Batter handedness vs bearing"
  #ylab=c("test","test2","dsf")
)
# text( .2,.6, "TEMP GRAHHHHHHHH",col = "black",cex = 0.5) 
rasterImage(png::readPNG("media/Wii_batter_lefth.png"), xleft=0.4, ybottom=0, xright=0.6, ytop=0.4)
rasterImage(png::readPNG("media/Wii_batter_righth.png"), xleft=0.4, ybottom=0.5, xright=0.6, ytop=0.9)

# reverse bearing for better visualization (pitcher's pov is right center left)
rev_bearing = factor(baseball$bearing, levels=c("right", "center", "left"))
pitcher = table(rev_bearing, baseball$is_pitcher_lefty)
dimnames(pitcher) <- list(
  c("right", "center", "left"),
  c("right \nhanded","left \nhanded")
) 
mosaicplot(
  pitcher, 
  shade=TRUE, 
  las=1,
  main="Pitcher handedness vs bearing"
)
rasterImage(png::readPNG("media/Wii_pitcher_lefth.png"), xleft=0.3, ybottom=0.2, xright=0.6, ytop=0.5)
rasterImage(png::readPNG("media/Wii_pitcher_righth.png"), xleft=0.3, ybottom=0.7, xright=0.6, ytop=1)
```


### Inning

Inning affects pitching and batting gameplay.

```{r, echo = FALSE}
# elina original graph
bb_train_edit <- baseball |>
  select(inning, pitch_name, bb_type) |>
  filter(!is.na(inning), !is.na(pitch_name), !is.na(bb_type),
         !(inning == "10"), !(inning == "11"),
         !(inning == "12"), !(inning == "13"))
bb_train_edit$pitch_name_grouped = 
  bb_train_edit$pitch_name |> 
  forcats::fct_recode("Fastball" = "4-Seam Fastball",
                      "Fastball" = "Cutter",
                      "Fastball" = "Forkball",
                      "Fastball" = "Sinker",
                      "Fastball" = "Split-Finger",
                      "Breaking ball" = "Curveball",
                      "Breaking ball" = "Knuckle Curve",
                      "Breaking ball" = "Slider",
                      "Changeup" = "Changeup")
bb_train_edit$bb_type_renamed = 
  bb_train_edit$bb_type |> 
  forcats::fct_recode("Fly ball" = "fly_ball",
                      "Ground ball" = "ground_ball",
                      "Line drive" = "line_drive",
                      "Popup" = "popup")
bb_train_edit |>
  ggplot(aes(x = inning)) +
  geom_density(aes(color = pitch_name_grouped)) +
  scale_color_manual(values = c("gold", "royalblue", "purple")) +
  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9)) +
  facet_grid(~ bb_type_renamed) +
  labs(title = "Facetted Density Graphs of Batted Ball Type by Pitch Type",
       x = "Inning",
       y = "Density",
       color = "Pitch type",
       caption = "Note: Pitch type modes at innings 1, 4, and 6, respectively") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.caption.position = "plot")
```


### Launch angle

Some variables we want to explore further are launch angle and pitch speed in relation to game performance. In this section, we ask if launch angle and pitch speed correlate with each other, and what ways do they affect if a batted ball was a home run? 

To investigate these possible relationships, we first clean the baseball data to remove null values from pitch speed and launch angles. Then, we created a scatteplot between pitch speed (mph) and launch angles (degrees), colored by if a batted ball was a home run or not:

```{r, echo=FALSE}
pitch_data <- baseball |> 
  filter(!is.na(launch_angle), !is.na(pitch_mph))

home_run_medians <- pitch_data |>
  filter(is_home_run == 1) |>
  summarise(
    median_launch_angle = median(launch_angle),
    median_pitch_speed = median(pitch_mph)
  )

ggplot(pitch_data, aes(x = launch_angle, y = pitch_mph, color = as.factor(is_home_run))) +
  geom_point(alpha = 0.4, size = 1.5) +
  scale_color_manual(values = c("0" = "gray", "1" = "red"), 
                     labels = c("No", "Yes")) + 
  geom_vline(xintercept = home_run_medians$median_launch_angle, 
             color = "orange", linetype = "solid") +
  geom_hline(yintercept = home_run_medians$median_pitch_speed, 
             color = "blue", linetype = "solid") + 
  annotate("text", 
           x = home_run_medians$median_launch_angle + 2,
           y = max(pitch_data$pitch_mph),
           label = paste("Median Launch Angle (HR):", round(home_run_medians$median_launch_angle, 2)), 
           color = "orange", hjust = 0) + 
  annotate("text", 
           x = min(pitch_data$launch_angle) + 15,
           y = home_run_medians$median_pitch_speed + 1,
           label = paste("Median Pitch Speed (HR):", round(home_run_medians$median_pitch_speed, 2)), 
           color = "blue", hjust = 0) +
  annotate("text", x = 50, y = 87, label = "Linear Trend", color = "black", hjust = 0) +
  geom_smooth(method = "lm", se = FALSE, color = "black", size = 1.1) +
  labs(
    title = "Launch Angle vs. Pitch Speed by Home Run with Median Line",
    x = "Launch Angle (degrees)",
    y = "Pitch Speed (mph)",
    color = "Is Home Run"
  ) +
  theme_minimal() +
  theme(legend.position = "top")
```
We can see that home run balls appear to occur across all pitch speeds, not limited to certain ranges, whereas launch angles distinctly appear to have a specific range of values where home runs occur. The blue and orange lines represent the median values of pitch speed and launch angles respectively for home runs. We can compare these values with the overall median values of all the batted balls below: 

```{r}
overall_medians <- pitch_data |>
  summarise(
    median_launch_angle = median(launch_angle),
    median_pitch_speed = median(pitch_mph)
  )
overall_medians$median_launch_angle
overall_medians$median_pitch_speed
```
We see that the overall pitch speed median is extremely close to the median pitch speed for home runs, which makes sense since we did not find an obvious interval where home runs occur more for pitch speed. However, we find the value for overall median launch angle to be 13, which is much further than the median value of 28 for launch speed for home runs. Furthermore, a relatively horizontal linear trend indicates that pitch speed and launch angle do not seem to correlate with each other. As a result, we may want to dive deeper into the relationship between launch angles and home runs.

We can confirm whether launch angle is normal by looking at its Q-Q plot: 

```{r}
qqnorm(pitch_data$launch_angle, main = "Q-Q Plot of Launch Angles")
qqline(pitch_data$launch_angle, col = "red")
```
We find the the Q-Q plot for launch angles is S-shaped, and deviates at the ends of the line, which suggests heavy outliers that don't conform to the normal distribution. As a result, we confirm that the distribution for launch angle is not normal. 

Then, we cannot use a t test to check the mean values between overall batted balls and home run batted balls. However, since our sample size is so large, by the central limit theorem we can claim that the means will be approximately normal; then we can use a z test as opposed to a t test. Below we manually calculate the z test between home run launch angles and non-home run launch angles:

```{r}
home_run_data <- pitch_data |>
  filter(is_home_run == 1)

non_home_run_data <- pitch_data |>
  filter(is_home_run == 0)

z.test(x = home_run_data$launch_angle,
       y = non_home_run_data$launch_angle,
       alternative = "two.sided",
       mu = 0,
       sigma.x = sd(home_run_data$launch_angle),
       sigma.y = sd(non_home_run_data$launch_angle))
```
The results of the two-sample z-test here reveal a statistically significant difference in mean launch angles between home run and non-home run batted balls (p-value < 2.2e-16). Specifically, the mean launch angle for home runs is significantly higher than for non-home runs. This suggests that launch angle plays a critical role in determining whether a batted ball results in a home run. Therefore, we can conclude that launch angle is an important factor for predicting home run outcomes in baseball.

To further explore the relationship between launch angle and the likelihood of a home run, we can fit a logistic regression model. This model predicts the probability of a home run as a function of the launch angle, and it makes sense given home run is a binary variable. However, given that only a select portion of angles have home runs within them, we can consider a quadratic regression (the probability of home run increases, then decreases). Below are the summary for each regression model: 

```{r}
min(home_run_data$launch_angle)
max(home_run_data$launch_angle)

pitch_data_filtered <- pitch_data |>
  filter(!is.na(is_home_run)) |>
  filter(launch_angle >= 10 & launch_angle <= 50)

glm.out <- glm(is_home_run ~ launch_angle, data = pitch_data_filtered, family = binomial)

summary(glm.out)

quad_model <- glm(is_home_run ~ launch_angle + I(launch_angle^2), 
                  family = binomial, 
                  data = pitch_data)
summary(quad_model)

```
Comparing the two model's AIC values, we determine that the quadratic mdoel is better as it has a lower AIC value. Now, we can graph the quadratic model probabilities: 

```{r}
launch_angle_seq <- seq(min(pitch_data_filtered$launch_angle), 
                        max(pitch_data_filtered$launch_angle), 
                        length.out = 300)

predicted_data <- data.frame(launch_angle = launch_angle_seq)

predicted_data$predicted_prob <- predict(quad_model, 
                                         newdata = predicted_data, 
                                         type = "response")
ggplot(pitch_data_filtered, aes(x = launch_angle, y = is_home_run)) +
  geom_line(data = predicted_data, aes(x = launch_angle, y = predicted_prob), color = "lightblue", size = 1) +
  labs(
    title = "Probability of Home Run vs. Launch Angle",
    x = "Launch Angle (degrees)",
    y = "Predicted Probability of Home Run"
  )
```
From the graph above, we see that the relationship follows a bell-shaped curve, where the probability of hitting a home run increases up until about 30 degrees, and then decreases as the launch angle becomes higher. This suggests that there is an optimal launch angle range to hit a home run; a quadratic regression model explains this non-linear relationship well. We can also find the "best" angle according to this model by finding the peak value: 
```{r}
coef_quad <- coef(quad_model)
peak_launch_angle <- -coef_quad["launch_angle"] / (2 * coef_quad["I(launch_angle^2)"])
peak_launch_angle
```
So the best angle according to our model is 29.57494 degrees. 

### Hit location

In Baseball, batters at-bat stand beside the home plate, seeking to hit the pitched ball in order to score "runs." Pitches can wildly differ in terms of behavior, varying in terms of speed and movement. One recorded metric for pitched balls is the point at which they cross the home plate. The position of a ball as it crosses the home plate is especially relevant for batters as it determines where they should swing their bats at. This is also relevant for pitchers, as these areas reflect areas that pitchers should avoid pitching toward to ensure minimized home runs for the opposing team. Thus, the question that we want to analyze is how certain plate positions of pitches affect batting performance.

Plate position can be defined in terms of two variables: plate_x and plate_z. Plate_x is the displacement away from the center of the home plate, and plate_z is the displacement above the plate. Both variables are in terms of feet. We wanted to learn where the most common plate locations were for pitches between hits that resulted in home runs compared to those that did not. Hence, the variables we seek to analyze are plate_x, plate_z, and is_home_run. We find the most common plate positions by utilizing a contour plot。

```{r, echo=FALSE, warning = FALSE}
baseball |>
  ggplot(aes(x = plate_x, y = plate_z)) +
  stat_density2d(aes(fill = after_stat(level)), geom = "polygon") + 
  facet_grid(. ~ fct_recode(factor(is_home_run), "Home Run" = "1", "Not Home Run" = "0")) + 
  labs(title = "Contour Plot of Plate Positions", x = "plate_x (feet)", y = "plate_z (feet)", 
       caption = "Note: red line is middle of plate") +
  geom_vline(xintercept = 0, color = "red", size = 1) + 
  scale_fill_viridis(name = "Density Level") + 
  theme_bw()
```

In this graph, a red line is added at plate_x = 0 in order to show if a pitch is centered or not. For pitches that resulted in home runs, there appears to be a singular mode within the data at around 0.0 feet for plate_x and around 2.2 for plate_z. However, among pitches that resulted in home runs, the results greatly differ. Like seen with the pitches that did not result in home runs, there also appears to be a singular mode within the data, but the density of the mode appears to be far greater. This is reflected within the lighter color of center of the mode, which indicates a greater density of points. Furthermore, unlike the mode for pitches that did not result in a home run, this mode appears to be off-center, as it is centered at around 0.05 feet for plate_x and 2.25 feet for plate_z. This is likely due to the prevalence of right-handed batters within the MLB. Namely, the sweet spot of the bat is off center and to the right for right-handed batters. Contact with the sweet spot is known to dramatically boost batting performance, which should indicate why the mode is off-center. There is also a small portion of the mode that stretches out left and upwards. This might be from home runs that are hit by left-handed batters.

We also wanted to find out how the height of a pitch might affect the batting performance of a batter. Batting performance can be described as variety of metrics that analyze how the ball comes off the bat. In this case, we seek to analyze the speed of balls that come off the bat. However, since higher pitch speeds are likely to result in higher launch speeds of balls, we must control for pitch speed. Thus, we create a new ratio variable called "sp_ratio" which is defined as launch speed/pitch speed. A higher sp_ratio means that the batter hit was more successful as they were able to put in more speed to their hit proportional to the pitch they were given, which means that it will likely be harder to catch in the outfield as well (and potentially result in a home run). We are also curious to see how this differs among left and right-handed batters. Thus, to analyze this, we utilize a scatterplot between pitch_z and sp_ratio, faceted by if the batter is lefty or not. We also add a linear regression trendline to visualize this relationship.

Firstly, we validate our desire to look into lefty and righty batters by analyzing if their distribution of plate_z is different to each other. To find out, we shall perform a two-sample Kolmogorov-Smirnov Test. In particular, we shall analyze if the distribution of pitch_z is the same among both.

```{r}
ks.test(x = bb_data_lefty$plate_z, y = bb_data_righty$plate_z)
```
Since the p-value of the Kolmogorov-Smirnov test is less than our alpha of 0.05, we have sufficient evidence to reject the null hypothesis. Therefore, we can conclude that the means are not equal. Thus, there might be a difference among lefty and righty batters in this regard. Thus, we proceed to our analyzed relationship of plate_z compared to sp_ratio below between lefty and righty batters.

```{r, echo = FALSE, warning = FALSE}
park_dim$park <- as.factor(park_dim$park)
altered_bb <- full_join(baseball, park_dim, by = "park")
altered_bb <- altered_bb |>
  mutate(sp_ratio = launch_speed/pitch_mph)

bb_data_lefty <- altered_bb |>
  filter(is_batter_lefty == 1) |>
  select(- is_batter_lefty)
bb_data_lefty <- na.omit(bb_data_lefty)

bb_data_righty <- altered_bb |>
  filter(is_batter_lefty == 0) |>
  select(- is_batter_lefty)
bb_data_righty <- na.omit(bb_data_righty)

altered_bb.rm <- na.omit(altered_bb)

l_cor <- round(cor(bb_data_lefty$plate_z, bb_data_lefty$sp_ratio), 5)
r_cor <- round(cor(bb_data_righty$plate_z, bb_data_righty$sp_ratio), 5)
t_cor <- round(cor(altered_bb.rm$plate_z, altered_bb.rm$sp_ratio), 5)

labels <- data.frame(
  is_batter_lefty = c("0", "1"),  # MUST match the original raw values
  plate_z = c(4, 4),              # x-coordinate for label
  sp_ratio = c(1.5, 1.5),         # y-coordinate for label
  label = c(paste("r =", r_cor), paste("r =", l_cor))
)

# Now fix the plot:
altered_bb |> 
  ggplot(aes(x = plate_z, y = sp_ratio)) + 
  geom_point(alpha = 0.05) + 
  facet_grid(. ~ fct_recode(is_batter_lefty, "Righty" = "0", "Lefty" = "1")) +
  geom_smooth(method = "lm", se = FALSE, color = "red") + 
  geom_text(
    data = labels,
    mapping = aes(x = plate_z, y = sp_ratio, label = label),  # <- use variable names, not constants
    inherit.aes = FALSE,
    size = 3.5
  ) +
  theme_bw() + 
  labs(title = "Scatterplots of Pitch Height vs. Speed Ratio by Batter Handedness", x = "plate_z (feet)", y = "Speed Ratio", caption = "Speed Ratio is Launch Speed / Pitch Speed")


```

There appears to be a weak negative correlation between the height of a pitch and the resulting speed ratio, indicating that this relationship appears to be the same for both lefty and righty batters. Moreover, the negative relationship appears to be slightly stronger for lefty batters as the Pearson correlation coefficient of -0.07285 has a larger magnitude than the Pearson correlation coefficient among righty batters of -0.05141, but to a nearly negligible degree. This suggests that higher pitches cause worse batting performance, which is likely due to the fact that it is harder for hitters to generate swing speed if the pitch is higher due to the characteristics of a baseball swing. Furthermore, the requirement that catchers be crouched is likely why the correlation coefficients are so low in this relationship. Regardless, pitchers could consider pitching slightly higher to limit batting performance of hitters, thus limiting the possibility of hard-to-get hits or home runs.

## Discussion

From our third research question, we found that pitch speed and launch angle did not correlate with each other, and that pitch speed and home runs did not seem to have a relationship. On the other hand, we found evidence through the scatterplot that launch angle and home runs were correlated. Comparing logistic and quadratic regression, we formed a quadratic relationship to predict home run probability from launch angles. By our model, an angle of about 30 degrees is most optimal, with close to a 30% chance of home run. This model is only generalizable between 10 and 50 degrees, since no home runs occur outside of those launch angles. 
### Future Work

Future directions regarding launch angles can be focused towards finding better models to predict home runs. Although we created two regression models, logistic and quadratic, we can try looking at other polynomial relationships and include other significant variables to create a more generalizable relationship to predict home runs. Additionally, we can relate launch angles to other variables other than home run for further analysis. 
## Appendix

![Jaihao is Kermit](./media/kermit.png)